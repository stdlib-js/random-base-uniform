// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";var g=l.isPrimitive,f=p;var h=function(e,t){return!g(e)||f(e)?new TypeError("invalid argument. First argument must be a number primitive and not `NaN`. Value: `"+e+"`."):!g(t)||f(t)?new TypeError("invalid argument. Second argument must be a number primitive and not `NaN`. Value: `"+t+"`."):e>=t?new RangeError("invalid argument. Minimum support `a` must be less than maximum support `b`. Value: `["+e+","+t+"]`."):null};var j=function(e,t,n){var r=e();return n*r+(1-r)*t},c=e,b=t,v=n,y=r,x=s,w=i,N=o,E=m,L=a.factory,O=d,T=u,V=h,P=j;var R=function(){var e,t,n,r,s,i;if(0===arguments.length)t=L();else if(1===arguments.length){if(!y(e=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+e+"`.");if(w(e,"prng")){if(!x(e.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+e.prng+"`.");t=e.prng}else t=L(e)}else{if(r=V(s=arguments[0],i=arguments[1]))throw r;if(arguments.length>2){if(!y(e=arguments[2]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+e+"`.");if(w(e,"prng")){if(!x(e.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+e.prng+"`.");t=e.prng}else t=L(e)}else t=L()}return c(n=void 0===s?f:g,"NAME","uniform"),e&&e.prng?(c(n,"seed",null),c(n,"seedLength",null),v(n,"state",N(null),E),c(n,"stateLength",null),c(n,"byteLength",null),c(n,"toJSON",N(null)),c(n,"PRNG",t)):(b(n,"seed",o),b(n,"seedLength",m),v(n,"state",u,l),b(n,"stateLength",a),b(n,"byteLength",d),c(n,"toJSON",p),c(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function a(){return t.stateLength}function d(){return t.byteLength}function u(){return t.state}function l(e){t.state=e}function p(){var e={type:"PRNG"};return e.name=n.NAME,e.state=T(t.state),e.params=void 0===s?[]:[s,i],e}function g(){return P(t,s,i)}function f(e,n){return O(e)||O(n)||e>=n?NaN:P(t,e,n)}},G=R(),M=R;e(G,"factory",M);var S=G;export{S as default,M as factory};
//# sourceMappingURL=index.mjs.map
