// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";var g=p.isPrimitive,h=u,j=f;var c=function(e,t){return!g(e)||j(e)?new TypeError(h("invalid argument. First argument must be a number and not `NaN`. Value: `%s`.",e)):!g(t)||j(t)?new TypeError(h("invalid argument. Second argument must be a number and not `NaN`. Value: `%s`.",t)):e>=t?new RangeError(h("invalid argument. Minimum support `a` must be less than maximum support `b`. Value: `[%f,%f]`.",e,t)):null};var b=function(e,t,n){var r=e();return n*r+(1-r)*t},v=e,y=t,x=n,w=r,N=s,E=i,L=o,O=m,T=a.factory,V=d,P=l,R=u,G=c,M=b;var S=function(){var e,t,n,r,s,i;if(0===arguments.length)t=T();else if(1===arguments.length){if(!w(e=arguments[0]))throw new TypeError(R("invalid argument. Options argument must be an object. Value: `%s`.",e));if(E(e,"prng")){if(!N(e.prng))throw new TypeError(R("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=T(e)}else{if(r=G(s=arguments[0],i=arguments[1]))throw r;if(arguments.length>2){if(!w(e=arguments[2]))throw new TypeError(R("invalid argument. Options argument must be an object. Value: `%s`.",e));if(E(e,"prng")){if(!N(e.prng))throw new TypeError(R("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=T(e)}else t=T()}return v(n=void 0===s?g:f,"NAME","uniform"),e&&e.prng?(v(n,"seed",null),v(n,"seedLength",null),x(n,"state",L(null),O),v(n,"stateLength",null),v(n,"byteLength",null),v(n,"toJSON",L(null)),v(n,"PRNG",t)):(y(n,"seed",o),y(n,"seedLength",m),x(n,"state",l,u),y(n,"stateLength",a),y(n,"byteLength",d),v(n,"toJSON",p),v(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function a(){return t.stateLength}function d(){return t.byteLength}function l(){return t.state}function u(e){t.state=e}function p(){var e={type:"PRNG"};return e.name=n.NAME,e.state=P(t.state),e.params=void 0===s?[]:[s,i],e}function f(){return M(t,s,i)}function g(e,n){return V(e)||V(n)||e>=n?NaN:M(t,e,n)}},A=S(),J=S;e(A,"factory",J);var z=A;export{z as default,J as factory};
//# sourceMappingURL=index.mjs.map
