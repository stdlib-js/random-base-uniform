// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import{factory as a}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as p}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";function g(e,t){return!p(e)||f(e)?new TypeError(u("invalid argument. First argument must be a number and not NaN. Value: `%s`.",e)):!p(t)||f(t)?new TypeError(u("invalid argument. Second argument must be a number and not NaN. Value: `%s`.",t)):e>=t?new RangeError(u("invalid argument. Minimum support must be less than maximum support. Value: `[%f, %f]`.",e,t)):null}function h(e,t,n){var s=e();return n*s+(1-s)*t}function j(){var p,f,j,c,v,b;if(0===arguments.length)f=a();else if(1===arguments.length){if(!s(p=arguments[0]))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",p));if(i(p,"prng")){if(!r(p.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",p.prng));f=p.prng}else f=a(p)}else{if(c=g(v=arguments[0],b=arguments[1]))throw c;if(arguments.length>2){if(!s(p=arguments[2]))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",p));if(i(p,"prng")){if(!r(p.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",p.prng));f=p.prng}else f=a(p)}else f=a()}return e(j=void 0===v?V:T,"NAME","uniform"),p&&p.prng?(e(j,"seed",null),e(j,"seedLength",null),n(j,"state",o(null),m),e(j,"stateLength",null),e(j,"byteLength",null),e(j,"toJSON",o(null)),e(j,"PRNG",f)):(t(j,"seed",y),t(j,"seedLength",x),n(j,"state",E,L),t(j,"stateLength",w),t(j,"byteLength",N),e(j,"toJSON",O),e(j,"PRNG",f),f=f.normalized),j;function y(){return f.seed}function x(){return f.seedLength}function w(){return f.stateLength}function N(){return f.byteLength}function E(){return f.state}function L(e){f.state=e}function O(){var e={type:"PRNG"};return e.name=j.NAME,e.state=l(f.state),e.params=void 0===v?[]:[v,b],e}function T(){return h(f,v,b)}function V(e,t){return d(e)||d(t)||e>=t?NaN:h(f,e,t)}}var c=j();e(c,"factory",j);export{c as default,j as factory};
//# sourceMappingURL=index.mjs.map
